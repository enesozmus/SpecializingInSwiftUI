<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export4.dtd">
<en-export export-date="20240506T140409Z" application="Evernote" version="10.86.8">
  <note>
    <title>İsimsiz</title>
    <created>20240506T111107Z</created>
    <updated>20240506T140111Z</updated>
    <note-attributes>
      <author>Enes Ozmus</author>
    </note-attributes>
    <content>
      <![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div>   <b>SwiftUI</b> is <span style="color:rgb(13, 58, 153);">a declarative framework</span>, <span style="color:rgb(13, 58, 153);">a modern way </span><span style="color:rgb(252, 18, 51);">to compose the user interfaces of your app </span><span style="color:rgb(24, 168, 65);">for any Apple platform</span>.</div><div>  <b>SwiftUI</b> helps you <span style="color:rgb(252, 18, 51);">build </span> <span style="color:rgb(13, 58, 153);">great-looking apps</span> <span style="color:rgb(24, 168, 65);">across all Apple platforms</span> with the power of Swift — and surprisingly little code.</div><div>  <b>With SwiftUI</b>, you can create beautiful, dynamic apps faster than ever before.</div><hr/><h3 style="--en-isCollapsed:false; --en-nodeId:681bf028-5802-4f1c-94ae-93c2e1afb29b;"><span style="--en-highlight:blue;background-color: #adecf4;">Exploring the structure of a SwiftUI app</span></h3><div>  <b><i>An app structure</i></b> describes <span style="font-size: 14px;"><span style="color:rgb(252, 18, 51);">the content</span></span> and <span style="font-size: 14px;"><span style="color:rgb(252, 18, 51);">behavior</span></span> of your app, and each SwiftUI app has <span style="font-size: 14px;"><i><u>one and only one</u></i></span> main app structure.</div><div>  The principle building blocks that form the structure of a SwiftUI app are the <b><span style="color:rgb(26, 169, 178);">App</span></b>, <b><span style="color:rgb(26, 169, 178);">Scene</span></b>, and <b><span style="color:rgb(26, 169, 178);">View protocols</span></b>.</div><div style="padding-left:320px;">    This sample defines its app structure in the <span style="--en-highlight:red;background-color: #fec1d0;"><span style="color:rgb(51, 51, 51);">...App.swift</span></span> file.</div><div style="padding-left:320px;"><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI</div></div><div>  <u>To access</u> the symbols and features of SwiftUI, the app uses <span style="color:rgb(51, 51, 51);">an </span><code>import</code><span style="color:rgb(51, 51, 51);"> declaration</span> <span style="color:rgb(51, 51, 51);">to import the </span><b><span style="color:rgb(51, 51, 51);">SwiftUI framework</span></b>.</div><div style="padding-left:240px;">  An <code>import</code> declaration lets you <u>access</u> symbols that are declared outside the current file.</div><div style="padding-left:240px;">  The basic form imports the entire module; it consists of the <code>import</code> keyword followed by <span style="--en-highlight:yellow;background-color: #ffef9e;">a module name</span>:</div><div style="padding-left:240px;"><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI</div><div><br/></div><div>@main</div></div><div><span style="color:rgb(29, 29, 31);">  To indicate </span><span style="--en-highlight:blue;background-color: #adecf4;"><span style="color:rgb(51, 51, 51);">the entry point</span></span><span style="color:rgb(29, 29, 31);"> of the SwiftUI app, the sample applies the </span><code><u>@main</u></code> attribute to the app structure.</div><div style="padding-left:240px;"><span style="color:rgb(51, 51, 51);">  The entry point is responsible f</span>or the start up of the app.</div><div style="padding-left:240px;">  A SwiftUI app contains <span style="color:rgb(252, 18, 51);">one and only one entry point</span>.</div><div style="padding-left:240px;">  <code><u>@main</u></code>applies this attribute to a structure, class, or enumeration declaration to indicate that it contains the top-level entry point for program flow.</div><div style="padding-left:240px;">  Attempting to apply <code><u>@main</u></code> to more than one structure in the app results in a compiler error.</div><div style="padding-left:240px;"><code><u>@main</u></code></div><div style="padding-left:240px;">..........................................</div><div style="padding-left:240px;">↓ <span style="color:rgb(252, 18, 51);">Attributes</span> ↓</div><div style="padding-left:280px;">  An attribute provides additional information about the declaration or type.</div><div style="padding-left:280px;">  There are two kinds of attributes in Swift — those that apply to declarations and those that apply to types.</div><div style="padding-left:280px;">  You specify an attribute by writing the @ symbol followed by the attribute’s name and any arguments that the attribute accepts:</div><div style="padding-left:320px;">    @<span style="font-size: 12px;"><span style="color:rgb(90, 90, 90);">&lt;#</span><i><span style="color:rgb(90, 90, 90);">attribute name</span></i><span style="color:rgb(90, 90, 90);">#></span></span></div><div style="padding-left:320px;"><span style="font-size: 15px;"><span style="color:rgb(90, 90, 90);"><span style="--en-markholder:true;"><br/></span></span></span></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI</div><div><br/></div><div>@main</div><div>struct MyApp: App {</div><div>}</div></div><div>  The MyApp structure conforms to <b><span style="color:rgb(26, 169, 178);">the App protocol</span></b>, and provides <span style="color:rgb(252, 18, 51);">the content and structure</span> of the app and <span style="color:rgb(252, 18, 51);">its behavior</span>.</div><div style="padding-left:240px;">  ↓ <b><span style="color:rgb(26, 169, 178);">App </span></b>↓</div><div style="padding-left:280px;">  A protocol that represents the structure and behavior of an app.</div><div style="padding-left:280px;">  You can create an app by declaring a structure that conforms to <b><span style="color:rgb(26, 169, 178);">the App protocol</span></b>. Then <i><span style="color:rgb(24, 168, 65);">the required body computed property </span></i>is applied to define the app’s content.</div><div style="padding-left:280px;">  The protocol provides <span style="font-size: 14px;"><i>a default implementation of the main() method</i></span> that the system calls to launch your app.</div><div style="padding-left:320px;">  The app’s body consists of instances<sub>(compose) </sub>that conform to <b><span style="color:rgb(26, 169, 178);">the Scene protocol</span></b>.</div><div style="padding-left:320px;">  <b><span style="color:rgb(26, 169, 178);">Each scene</span></b> contains <span style="font-size: 14px;"><i>the root view of a view hierarchy</i></span> that <span style="color:rgb(252, 18, 51);">defines</span> the app’s user interface and <span style="color:rgb(252, 18, 51);">has</span> a life cycle managed by the system.</div><div style="padding-left:320px;">  SwiftUI provides some concrete scene types to handle common scenarios, like for displaying <span style="color:rgb(24, 133, 226);">documents</span> or <span style="color:rgb(24, 133, 226);">settings</span>.</div><div style="padding-left:320px;"><span style="color:rgb(29, 29, 31);">  You can also create </span><i><span style="color:rgb(13, 58, 153);">custom scenes</span></i><span style="color:rgb(29, 29, 31);">.</span></div><div style="padding-left:320px;"><span style="color:rgb(29, 29, 31);">  </span>You can declare <span style="color:rgb(252, 18, 51);">state</span> in your app to share across all of <b><span style="color:rgb(26, 169, 178);">its scenes</span></b>.</div><div style="padding-left:320px;">  For example, you can use <span style="font-size: 12px;"><span style="color:rgb(87, 36, 194);">the StateObject attribute</span></span> to initialize a data model, and then provide that model on a view input as <span style="font-size: 12px;"><i><span style="color:rgb(87, 36, 194);">an ObservedObject</span></i></span> or through the environment as <span style="font-size: 12px;"><i><span style="color:rgb(87, 36, 194);">an EnvironmentObject</span></i></span> to scenes in the app.</div><div style="padding-left:320px;"><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI</div><div><br/></div><div>@main</div><div>struct MyApp: App {</div><div>    var body: some Scene {</div><div>    }</div><div>}</div></div><div>  The structure implements <i><span style="color:rgb(24, 168, 65);">the computed property body</span></i>, which is <span style="color:rgb(252, 18, 51);">a requirement</span> of the App protocol.</div><div>  This property <span style="color:rgb(252, 18, 51);">returns</span> <span style="font-size: 14px;"><i>the contents of your app</i></span> described as <b><span style="color:rgb(26, 169, 178);">a Scene</span></b>.</div><div style="padding-left:280px;">    <b><span style="color:rgb(26, 169, 178);">A scene</span></b> contains <span style="font-size: 14px;"><i>the root view of a view hierarchy</i></span> that <span style="color:rgb(252, 18, 51);">defines</span> the app’s user interface and <span style="color:rgb(252, 18, 51);">has</span> a life cycle managed by the system.</div><div style="padding-left:320px;">   A part of an app’s user interface with a life cycle managed by the system.</div><div style="padding-left:320px;">  <b><span style="color:rgb(26, 169, 178);">A scene</span></b> acts <i><u>as a container</u></i> for a view hierarchy that you want to display to the user.</div><div style="padding-left:320px;">  You can create an App by combining one or more instances that conform to <b><span style="color:rgb(26, 169, 178);">the Scene protocol</span></b> in <span style="color:rgb(252, 18, 51);">the app’s body</span>.</div><div style="padding-left:320px;">  You can use the built-in scenes that SwiftUI provides, like <span style="color:rgb(24, 133, 226);">WindowGroup</span>, along with custom scenes that you compose from other scenes.</div><div style="padding-left:320px;"><span style="font-size: 12px;">  To create a custom scene, declare a type that conforms to </span><b><span style="font-size: 12px;"><span style="color:rgb(26, 169, 178);">the Scene protocol</span></span></b><span style="font-size: 12px;">. Implement <span style="color:rgb(252, 18, 51);">the required body computed property</span> and provide the content for your custom scene:</span></div><div style="padding-left:280px;">  SwiftUI provides different types of scenes including <span style="color:rgb(24, 133, 226);">WindowGroup</span>, <span style="color:rgb(24, 133, 226);">Window</span>, <span style="color:rgb(24, 133, 226);">DocumentGroup</span>, and <span style="color:rgb(24, 133, 226);">Settings</span>.</div><div style="padding-left:320px;"><span style="font-size: 12px;">  Read <span style="color:rgb(229, 158, 37);">the scenePhase environment value</span> from within a scene or one of its views to check whether a scene is active or in some other state.</span></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI</div><div><br/></div><div>@main</div><div>struct MyApp: App {</div><div>    var body: some Scene {</div><div>        WindowGroup {  </div><div>        }</div><div>    }</div><div>}</div></div><div>  The structure implements <i><span style="color:rgb(24, 168, 65);">the computed property body</span></i>, which is <span style="color:rgb(252, 18, 51);">a requirement</span> of the App protocol.</div><div>  This property <span style="color:rgb(252, 18, 51);">returns</span> the contents of your app described as <b><span style="color:rgb(26, 169, 178);">a Scene</span></b>.</div><div style="padding-left:280px;"><b><span style="color:rgb(26, 169, 178);">  A scene</span></b> contains the view hierarchy that defines the app’s user interface.</div><div style="padding-left:280px;">  SwiftUI provides different types of scenes including <span style="color:rgb(24, 133, 226);">WindowGroup</span>, <span style="color:rgb(24, 133, 226);">Window</span>, <span style="color:rgb(24, 133, 226);">DocumentGroup</span>, and <span style="color:rgb(24, 133, 226);">Settings</span>.</div><div style="padding-left:280px;"><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>        WindowGroup {   </div><div>        }</div></div><div><span style="color:rgb(29, 29, 31);">This sample uses a </span><code>WindowGroup</code> <b><span style="color:rgb(26, 169, 178);">scene</span></b> to represent the main window that the app displays.</div><div style="padding-left:280px;">  <b>SwiftUI</b> provides platform-specific behaviors for <span style="color:rgb(24, 133, 226);">WindowGroup</span>.</div><div style="padding-left:320px;">  For instance, in macOS and iPadOS, a person can open more than one window from the group.</div><div style="padding-left:320px;">  And in macOS, a person can combine multiple instances of the window group into a set of tabs.</div><div style="padding-left:280px;">  If you’re creating <i><u>a document-based app</u></i> such as a word processor or text editor, you can use <span style="color:rgb(24, 133, 226);">the DocumentGroup scene</span> to open, save, and edit documents.</div><div style="padding-left:280px;"><br/></div><div style="padding-left:240px;">  ↓ <span style="color:rgb(24, 133, 226);">WindowGroup </span>↓</div><div style="padding-left:280px;">  <b><span style="color:rgb(26, 169, 178);">A scene</span></b> that presents a group of identically structured windows.</div><div style="padding-left:280px;">  You can use a <span style="color:rgb(24, 133, 226);">WindowGroup</span> as a container for a view hierarchy that your app presents.</div><div style="padding-left:280px;"><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI </div><div>@main </div><div>struct MyApp: App { </div><div>    var body: some Scene { </div><div>        WindowGroup { </div><div>            ContentView() </div><div>        } </div><div>    } </div><div>}</div></div><div>  The scene contains <span style="color:rgb(182, 41, 212);">ContentView</span>, a custom view that creates a view hierarchy that consists of an image and text.</div><div><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI </div><div>struct ContentView: View { </div><div>    var body: some View { </div><div>        VStack { </div><div>            Image(systemName: "globe") </div><div>                .imageScale(.large) </div><div>                .foregroundColor(.accentColor) </div><div>            Text("Hello, world!") </div><div>        } </div><div>        .padding() </div><div>    } </div><div>}</div></div><div><br/></div><en-media hash="abe9591d25050dd89444d2c42108175e" type="image/png" style="--en-naturalWidth:266; --en-naturalHeight:584;" width="182.16983251702294px" /><div><br/></div><hr/><h2 style="--en-nodeId:bef6debf-4d3a-40c2-99bc-674856b7fa9f;"><b><span style="--en-highlight:yellow;background-color: #ffef9e;"><span style="color:rgb(51, 51, 51);">View Hierarchy</span></span></b></h2><hr/><div>  In SwiftUI, <b><span style="color:rgb(24, 133, 226);">a scene</span></b> contains <i><u>the view hierarchy</u></i> that an app displays as its user interface.</div><div>  <i><u>A view hierarchy</u></i> defines the layout of views relative to other views.</div><en-media style="--en-naturalWidth:266; --en-naturalHeight:584;" width="209.78505351445446px" hash="abe9591d25050dd89444d2c42108175e" type="image/png" /><div><br/></div><div style="--en-codeblock:true; --en-lineWrapping:false;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>import SwiftUI</div><div><br/></div><div>struct ContentView: View {</div><div>    var body: some View {</div><div>        VStack {</div><div>            Image(systemName: "globe")</div><div>                .imageScale(.large)</div><div>                .foregroundColor(.accentColor)</div><div>            Text("Hello, world!")</div><div>        }</div><div>        .padding()</div><div>    }</div><div>}</div></div><div>  The source code begins by <span style="color:rgb(252, 18, 51);">importing the SwiftUI framework</span>. Without the import declaration, ContentView wouldn’t have access to anything in SwiftUI.</div><div>  <code>ContentView</code> is a structure that conforms to the <b><span style="color:rgb(26, 169, 178);">View protocol</span></b>.</div><div style="padding-left:80px;">  A type that represents part of your app’s user interface and <i><u>provides modifiers</u></i> that you use to configure views.</div><div style="padding-left:80px;"><span style="color:rgb(182, 41, 212);">  A view</span> defines one or more visual elements that appear somewhere on a screen.</div><div style="padding-left:80px;"><span style="color:rgb(182, 41, 212);">  A view</span> is typically made up of other views, creating <i><u>a view hierarchy</u></i>.</div><div style="padding-left:80px;"><br/></div><div><code>ContentView</code> implements <span style="font-size: 14px;"><i><span style="color:rgb(24, 168, 65);">the computed property body</span></i></span>, just like the ‘<span style="font-size: 14px;"><i>MyApp</i></span>’ structure does in the previous section.</div><div style="padding-left:80px;">  The content and behavior of the view.</div><div style="padding-left:80px;">  When you implement <span style="color:rgb(182, 41, 212);">a custom view</span>, you must implement <i><span style="color:rgb(24, 168, 65);">a computed body property</span></i> to provide the content and behavior for your view.</div><div style="padding-left:80px;"><span style="color:rgb(29, 29, 31);">  Implementing </span><code>body</code><span style="color:rgb(29, 29, 31);"> is a common pattern that you see throughout your SwiftUI code; for instance, when a structure conforms to protocols such as </span><code><u>App</u></code><span style="color:rgb(29, 29, 31);">, </span><code><u>Scene</u></code><span style="color:rgb(29, 29, 31);">, and </span><code><u>View</u></code><span style="color:rgb(29, 29, 31);">.</span></div><div style="padding-left:80px;"><span style="color:rgb(29, 29, 31);"><span style="--en-markholder:true;"><br/></span></span></div><div><code>ContentView</code> contains the SwiftUI-provided view <code><u>VStack</u></code>, which arranges subviews vertically.</div><div style="padding-left:80px;">  <span style="color:rgb(182, 41, 212);">A view</span> that arranges its subviews in a vertical line.</div><div style="padding-left:80px;">  Unlike <code><u>LazyVStack</u></code>, which only renders the views when your app needs to display them, a <code><u>VStack</u></code> renders the views all at once, regardless of whether they are on- or offscreen.</div><div style="padding-left:80px;">  Using <code><u>VStack</u></code> is ideal when you have a small number of subviews. However, if your app needs to display many more subviews, consider using <code><u>LazyVStack</u></code>, which only renders the views when the app needs to display them onscreen.</div><div style="padding-left:80px;">  <span style="color:rgb(182, 41, 212);">A view</span> that arranges its children in a line that grows vertically, creating items only as needed.</div><div><span style="color:rgb(29, 29, 31);">The first </span><span style="--en-highlight:purple;background-color: #cbcaff;"><span style="color:rgb(29, 29, 31);">subview</span></span><span style="color:rgb(29, 29, 31);"> in </span><code>VStack</code> is <code><u>Image</u></code>, a view that displays an image.</div><div style="padding-left:80px;">  <span style="color:rgb(29, 29, 31);">The sample displays an image of a globe using </span><span style="--en-highlight:purple;background-color: #cbcaff;"><span style="color:rgb(29, 29, 31);">the initializer method</span></span><span style="color:rgb(29, 29, 31);"> </span><code><u>init(systemName:)</u></code>.</div><div style="padding-left:80px;">  This method creates an image view that displays a system symbol image.</div><div style="padding-left:80px;">  Symbol images like globe come from <a href="https://developer.apple.com/sf-symbols/" rev="en_rl_none"><u>SF Symbols</u></a>, a library of icons that you can use in your app.</div><div>  ContentView applies <span style="--en-highlight:purple;background-color: #cbcaff;">the view modifier</span> imageScale(_:) to the image view to scale the image within the view to the relative size Image.Scale.large.</div><div><span style="color:rgb(29, 29, 31);">  The </span><code><u>foregroundColor(_:)</u></code> <span style="--en-highlight:purple;background-color: #cbcaff;">modifier</span> adds color to the image view.</div><div>  <span style="color:rgb(29, 29, 31);">The second </span><span style="--en-highlight:purple;background-color: #cbcaff;"><span style="color:rgb(29, 29, 31);">subview</span></span><span style="color:rgb(29, 29, 31);"> of </span><code>VStack</code><span style="color:rgb(29, 29, 31);"> is </span><code><u>Text</u></code><span style="color:rgb(29, 29, 31);">, a view that displays one or more lines of read-only text.</span></div><div><span style="color:rgb(29, 29, 31);">  </span>ContentView applies the padding(_:_:) modifier to the VStack, adding a platform-specific default amount of padding — that is, space — to the edges of the VStack view.</div><div style="padding-left:40px;">  You can specify which edges and amount of padding to apply by providing edges and length parameter values.</div></en-note>      ]]>
    </content>
    <resource>
      <data encoding="base64">
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
qWphvsq+xP1flNeOah7R+09KsAQYoViR+KfeYwqyIZT+W3q9KXQf7QWCZk0ze+O4op/baeNRvYctjlmkkWEx5emqFlMlCAYM0h5j7hLoHwwfE9k4px9Xa0XPDVUWIjI6yoov1vD2q9NZ753DXSTVUu2vQ/ZkODiMfenbqdtVIXcrECv12Y5sHnOJ43CKy61zkdK58IfMk9ReptbWszwcC2kw+sBoyprn9caKBNYX7EjK+kdzdU51WmnE08Mi4wu/
P2RvCPMr6uO7oYhgcr1aCAbMl2r3mjv+4xsCaETn7gdedNiZ+dTgrlAYhJsYFu5Nh99sve+tFi//ILXb1dr0sXDmNNfpg/Wz17McAf4b5n9In+0X0BHM9fZKR9wFLiHwdbN5/s7h7yzvGQ53vGgY6SAOrr9XizpeoPYdtTat7/XeaTBNsn52ROL0x/1mR5j39P4UtRBwcLZxcX1UrTX36o31+8I6ulzfd4RD3W5Xe7Ha4Q73o3pfV601i/TGpn25
dQxd8TGwfhCZcNNUHTLVIgzay4aFaND4kMDLWmbbiPZ6Xz71uMsRHh3Yaerowxq1Nh236+vOCKF7dE5n2IP6nOIId0uY/ySHX0G3JS0UyO8RtfYlcJbb3u9Rf+foAHEKIxR/1nA2Ded1p7rPc/gVRSgaa3ysGznTDb+/W/2dpjhCgXRmqHXmAcGoCo9EM4k+9UB7OacfeEbDRjvtQDyYHWrxpRmmNnx4uVbdblN7h9pwgy8cOqU1M/Um3T7odYrj
Hrd2qhLmHLdHTAvOU4tpiHMBEV9kjAQwYlisNlrztEYYovZAKOIxvc5R20utc8qjj1EbTGPaq/232vARwAp1G6AW7VaSBiycZqw+hOft9Od9QAk01HqfrLZ6Ate/otati9oWapNLqJ74QDVVW6mE0nNLppE6QtBqunmWkNs9mo5zRNGnhNJlMiRAAj4ngLWjU9Vi5Oicbv3o83qx+CRAAiVIoI2m5RxF4B7T0E4lmAeTIgES8DkBp1BgjeUTtVi3
oiEBEiCBHALYrYJYYH2qpNZschLnDQmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQAAmQ
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
      </data>
      <mime>image/png</mime>
      <width>266</width>
      <height>584</height>
      <resource-attributes>
        <file-name>section-2-adornment@2x.png</file-name>
        <source-url>en-cache://tokenKey%3D%22AuthToken%3AUser%3A232643672%22+adb45769-6ed5-d0b1-6eb9-f4f887774ec7+abe9591d25050dd89444d2c42108175e+https://www.evernote.com/shard/s720/res/77f25469-149e-9ca7-af24-c675da46f2f7</source-url>
      </resource-attributes>
    </resource>
  </note>
</en-export>
